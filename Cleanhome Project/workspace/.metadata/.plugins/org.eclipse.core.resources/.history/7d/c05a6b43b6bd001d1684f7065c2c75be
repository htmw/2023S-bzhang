<template>
	<view>
		<u-navbar title="sign up" @leftClick="goBack" :border="true" :placeholder="true"   :autoBack="true"></u-navbar>
		<scroll-view :enable-flex="true" class="svcontainer">
			<u--form labelPosition="left" :model="fobj" ref="regform">
				<view class="formitem">
					<view class="formlabel">avatar:</view>
					<ideaUpload v-model="filelist"></ideaUpload>
				</view>
				<u-form-item borderBottom label-width="76" label="username:" prop="username">
					<u--input border="none" v-model="fobj.username" />
				</u-form-item>
				<u-form-item borderBottom label-width="76" label="phone number:" prop="tel">
					<u--input border="none" type="number" v-model="fobj.tel" />
				</u-form-item>
				<u-form-item borderBottom label-width="76" label="password:" prop="passwd">
					<u--input border="none" type="password" v-model="fobj.passwd" />
				</u-form-item>
				<u-form-item borderBottom label-width="76" label="password repetition:" prop="passwd2">
					<u--input border="none" type="password" v-model="fobj.passwd2" />
				</u-form-item>
				<u-form-item prop="sex" @click="sexshow = true;hideKeyboard();" borderBottom label-width="76"label="gender:">
					<u--input border="none" type="select" v-model="fobj.sex" />
					<u-icon slot="right" name="arrow-right"></u-icon>
					<u-action-sheet :show="sexshow" :actions="[{name:'male',id: 1}, {name:'female', id:2}]" title="Please select gender" description="select" @close="sexshow = false" @select="sexSelect" />
				</u-form-item>

			</u--form>

			<view class="hpaddingctn">
				<u-button type="primary" text="submit" @click="saveUser" />
			</view>
			
		</scroll-view>
	</view>
</template>

<script>
	import {
		listj,
		savej,
		findj,
		fileUrl,
		uploadUrl
	} from '@/common/config/api.js';
	import {
		ideautil,
		yewuutil
	} from '@/common/commontools.js'
	import {
		mapState,
		mapActions
	} from 'vuex'
	import ideaUpload from '@/components/idea-upload/idea-upload.vue'
	export default {
		components: {
			ideaUpload
		},
		data() {
			return {
				filelist: [],
				fobj: {
					username: '',
					tel: '',
					passwd: '',
					passwd2: '',
					sex: '女',
					roletype: 2
				},
				uploadUrl: uploadUrl,
				sexshow: false,
				sexshow2:false,
				duser:false,
				rules: {
					username: [{
						required: true,
						message: "Please check username",
					}, {
						asyncValidator: (rule, value, callback) => {
							
							if (value) {
								findj({
									params: {
										table: 'user',
										username: value
									}
								}).then(res => {
									if (res) {
										this.duser = true
										callback(new Error('Username already exists'));
									} else {
										this.duser = false
										callback();
									}
								}).catch(err => {
									callback(new Error('An error occurred'));
								})
							} else {
								callback(new Error('Please check username'));
							
							}

						},
						//message: "请检查用户名",
						// 触发器可以同时用blur和change
						trigger: ['blur'],
					}],
					passwd2: [{
						validator: (rule, value, callback) => {
							let r = false
							if (this.fobj.passwd && this.fobj.passwd2 && this.fobj.passwd == this.fobj
								.passwd2) {
								r = true
							}

							return r
						},
						message: 'Please confirm your password',
						trigger: ['change', 'blur'],
					}],
					tel: [{
						// 自定义验证函数，见上说明
						validator: (rule, value, callback) => {
							//this.$u.test.mobile 这个为校验是否为手机号的函数自带的
							return this.$u.test.mobile(value)
						},
						message: 'Please enter the correct phone number',
						// 触发器可以同时用blur和change
						trigger: ['change', 'blur'],
					}]
				}
			}
		},
		onLoad(params) {

		},
		onReady() {
			this.$refs.regform.setRules(this.rules);
		},
		methods: {
			...mapActions(['updateUserInfo']),
			hideKeyboard: ideautil.hideKeyboard,
			saveUser() {

				this.$refs.regform.validate().then(res => {
					this.filelist.length?this.fobj.img = this.filelist[0].url.data:this.fobj.img=""
					let fdata = this.fobj
					fdata.table = "user"
					if (this.duser) {
						uni.showToast({
							icon:'none',
							title: 'Username already exists!'
						})
						return;
					}
					savej({
						params: fdata
					}).then(res => {
						yewuutil.toLogin()
					}).catch(err => {

					})
				}).catch(errors => {
					uni.$u.toast('please check the input')
				})
			},
			goBack() {
				yewuutil.toLogin()
			},
			showSex(v) {
				this.fobj.sex = v.detail.value
			},
			sexSelect(e) {
				console.log(e.id)
				this.fobj.sex = e.name
			}
		},
		computed: {
			...mapState(['userInfo'])
		}
	}
</script>

<style lang="scss">

</style>
